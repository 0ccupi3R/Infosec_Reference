
[OpenRCE Anti Reverse Engineering Techniques Database](http://www.openrce.org/reference_library/anti_reversing)


[Analyzing and Running binaries from Firmware Images - Part 1](http://w00tsec.blogspot.com.br/2013/09/analyzing-and-running-binaries-from.html
)
[SIMET Box Firmware Analysis: Embedded Device Hacking & Forensics](http://w00tsec.blogspot.com.br/2013/08/simet-box-firmware-analysis-embedded.html)



[APK Studio - Android Reverse Engineering](https://apkstudio.codeplex.com/)
* APK Studio is an IDE for decompiling/editing & then recompiling of android application binaries. Unlike initial release being Windows exclusive & also didn't support frameworks, this one is completely re-written using QT for cross-platform support. You can now have multiple frameworks installed & pick a particular one on a per project basis.




High Level view of what Reverse Engineering is

Link: http://www.program-transformation.org/Transform/DecompilationAndReverseEngineering


Anti Reverse Engineering:
http://www.codeproject.com/Articles/30815/An-Anti-Reverse-Engineering-Guide


What is Reverse Engineering? See the following link:
http://www.program-transformation.org/Transform/DecompilationAndReverseEngineering

Guides & Tutorials


Wikis


Reference Guides




Starting from Scratch?
Check out: http://www.reddit.com/r/ReverseEngineering/comments/smf4u/reverser_wanting_to_develop_mathematically/
And : 

Windows Anti-Debugging Reference
	From: http://www.symantec.com/connect/articles/windows-anti-debug-reference
This paper classifies and presents several anti-debugging techniques used on Windows NT-based operating systems. Anti-debugging techniques are ways for a program to detect if it runs under control of a debugger. They are used by commercial executable protectors, packers and malicious software, to prevent or slow-down the process of reverse-engineering. We'll suppose the program is analyzed under a ring3 debugger, such as OllyDbg on Windows platforms. The paper is aimed towards reverse-engineers and malware analysts. Note that we will talk purely about generic anti-debugging and anti-tracing techniques. Specific debugger detection, such as window or processes enumeration, registry scanning, etc. will not be addressed here.

Cryptoshark
	From: https://github.com/frida/cryptoshark
Interactive code tracer for reverse-engineering proprietary software 