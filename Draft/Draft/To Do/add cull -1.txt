Something to pimp: https://sysforensics.org/2015/02/manage-the-dfir-information.html)0


SYSINTERNALS down needs TOC/links


 http://pr+ojectshellcode.com/?q=node/12

http://fileformats.archiveteam.org/wiki/Encyclopedia_of_Graphics_File_Formats


[](https://github.com/rrbranco/Troopers2015)





[Bug Hunting for the Man on the Street]()
* Finding and discovering bugs has to be one of the most special times in a security researchers life (until you realise that crash you've been searching for and finally found is not actually exploitable). But the process of searching, discovery, understanding and of course some very much needed trial and error, many would say are rewarding and fulfilling themselves (I would of course, prefer to have my exploit cherry on the top)! So this talk will detail some of the aspects required to hunt down and find these coveted security vulnerabilities and bugs and some approaches that have proven to be invaluable (and some not so much). Of course bug hunting principle need to produce bugs so as the cherry there will be a virtual box exploit and Barracuda networks 0 day exploit discussed and demon##Simulations


[Introduction to Hacking in Car Systems - Craig Smith - Troopers15](https://www.youtube.com/watch?v=WHDkf6kpE58)

[Advanced PDF Tricks - Ange Albertini, Kurt Pfeifle - [TROOPERS15]](https://www.youtube.com/watch?v=k9g9jZdjRcE)


Getting Started with WindDbg Series - OpenSecurity Research
[Getting Started with WinDbg part 1](http://blog.opensecurityresearch.com/2013/12/getting-started-with-windbg-part-1.html)


[discover - Kali Scripts](https://github.com/leebaird/discover)
* For use with Kali Linux - custom bash scripts used to automate various portions of a pentest. 



[digbit](https://github.com/mnmnc/digbit/blob/master/README.md)
* Automatic domain generation for BitSquatting


*********
IPv6

IPv6: Basic Attacks and Defences - Christopher Werny[TROOPERS15] 
 * [Part 1](https://www.youtube.com/watch?v=Y8kjQEGHbAU)
* [Part 2](https://www.youtube.com/watch?v=V-GYPp-j-lE)


[[TROOPERS15] Andreas Lindh - Defender Economics](https://www.youtube.com/watch?v=mAP38Xy52X0)


[[TROOPERS15] Merike Kaeo - Deploying IPv6 Securely - Avoiding Mistakes Others Have Made](https://www.youtube.com/watch?v=rQg4y78xHf8)




http://www.legbacore.com/Research.html

**
Decode Shellcode from cli: cat shellcode | rasm2 -d -
**


cachecrew.com/fixing-an-infected-php-web-server/


https://www.reddit.com/r/lowlevel/comments/30toah/advices_for_a_bootloader/



https://www.owasp.org/index.php/Secure_Coding_Cheat_Sheet

https://www.owasp.org/index.php/Application_Security_Architecture_Cheat_Sheet


*********
General Section?
********
[The foundation is rotting and the basement is flooding: A deeper look at the implicit trust relationships in your organization](https://www.youtube.com/watch?v=nL64uj9Xm24)
********

[Evaluating the APT Armor - Matthias Luft, Felix Wilhelm](https://www.youtube.com/watch?v=3vh2s9Pui0E)

[Combating the Insider Threat at the FBI: Real World Lessons Learned - BlackHat2013](https://www.youtube.com/watch?v=0stTS-G5FsE)



https://github.com/tombkeeper/DEP-and-ASLR-bypass-without-ROP-or-JIT

http://seclists.org/fulldisclosure/2015/Mar/67	 


http://www.lexsi-leblog.com/cert-en/qemu-gdb-pe-imports.html

https://en.wikipedia.org/wiki/Homomorphic_encryption




[Understanding !PTE - Non-PAE and X64](http://blogs.msdn.com/b/ntdebugging/archive/2010/06/22/part-3-understanding-pte-non-pae-and-x64.aspx?Redirected=true


MS Assessment Deployment Toolkit - Measure boot times among other things

seclists.org/fulldisclosure/2015/Mar/90

 

http://ytliu.info/blog/2014/05/31/blind-return-oriented-programming-brop-attack-yi/


 

 

[Generalizing Data Flow Information](http://uninformed.org/?v=all&a=34&t=sumry)
* Generalizing information is a common method of reducing the quantity of data that must be considered during analysis. This fact has been plainly illustrated in relation to static data flow analysis where previous research has described algorithms that can be used to generalize data flow information. These generalizations have helped support more optimal data flow analysis in certain situations. In the same vein, this paper describes a process that can be employed to generalize and persist data flow information along multiple generalization tiers. Each generalization tier is meant to describe the data flow behaviors of a conceptual software element such as an instruction, a basic block, a procedure, a data type, and so on. This process makes use of algorithms described in previous literature to support the generalization of data flow information. To illustrate the usefulness of the generalization process, this paper also presents an algorithm that can be used to determine reachability at each generalization tier. The algorithm determines reachability starting from the least specific generalization tier and uses the set of reachable paths found to progressively qualify data flow information for each successive generalization tier. This helps to constrain the amount of data flow information that must be considered to a minimal subset. 






https://www.segger.com/jlink-debug-probes.html

http://www.atmel.com/tools/rzusbstick.aspx

http://store.atmel.com/PartDetail.aspx?q=p:10500060#tc:description




[Evading IDS/IPS by Exploiting IPv6 Features - Antonios Atlasis, Rafael Schaefer](https://www.youtube.com/watch?v=avMeYIaU8DA&list=PL1eoQr97VfJni4_O1c3kBCCWwxu-6-lqy)

appleexaminer.com



https://the.bytecode.club/



http://waleedassar.blogspot.com/
https://github.com/isislab/Project-Ideas/wiki/Program-Analysis
https://github.com/isislab/Project-Ideas/wiki/Embedded-Device-Security
https://github.com/isislab/Project-Ideas/wiki/Application-Security



http://www.slideshare.net/mubix/windows-attacks-at-is-the-new-black-26665607

[List of hacker sites](http://link-base.org/)




https://github.com/iagox86/dnscat2/tree/v0.01


http://opensecuritytraining.info/MalwareDynamicAnalysis_files/MalwareDynamicAnalysis02.pdf



http://www.slideshare.net/grecsl/malware-analysis-101-n00b-to-ninja-in-60-minutes-at-cactuscon-on-april-4-2014

http://www.panelguides.com/index.php?option=com_jdownloads&Itemid=13

http://cs.gmu.edu/~astavrou/research/PyTrigger_ARES2013.pdf

http://sniperforensicstoolkit.squarespace.com/malwaremanagementframework/

http://www.myopenrouter.com/article/10917/Port-Mirroring-Span-Port-Monitor-Port-with-iptables-on-NETGEAR-WGR614L/

http://netdude.sourceforge.net/

Cull the interesting papers
http://www.covert.io/

http://www.harmj0y.net/blog/powershell/dumping-a-domains-worth-of-passwords-with-mimikatz-pt-2/

Dare is a project which aims at enabling Android application analysis. The Dare tool retargets Android applications in .dex or .apk format to traditional .class files. These .class files can then be processed by existing Java tools, including decompilers. Thus, Android applications can be analyzed using a vast range of techiques developed for traditional Java applications. 




http://siis.cse.psu.edu/
http://c7zero.info/

Lookat http://www.cl.cam.ac.uk/~sps32/PartII_030214.pdf

Check under research section
http://www.cl.cam.ac.uk/~sps32/


 
Go through
https://santoku-linux.com/howtos
Compare resources against what power-view can grab
Compare against sysmon service for scaling, setting it as service with scripting
http://www.codeproject.com/Articles/36907/How-to-develop-your-own-Boot-Loader

http://0xdabbad00.com/2013/09/02/file-scanner-web-app-part-1-of-5-stand-up-and-webserver/

https://addons.mozilla.org/en-US/firefox/addon/ssleuth/