Malware

Cull



http://www.cs.uno.edu/~golden/gpu-malware-research.html



[Frida](http://www.frida.re/docs/home/)
* Inject JS into native apps






[Pybox](https://bitbucket.org/daniel_plohmann/pybox/)
[Research paper on it](https://eldorado.tu-dortmund.de/bitstream/2003/27336/1/BookOfAbstracts_Spring5_2010.pdf)
* user-level framework for monitoring processes


[Static binary analysis tool](https://github.com/bdcht/amoco)
* Amoco is a python package dedicated to the (static) analysis of binaries.
* Worth a check on the Github

[Honeyagent](https://bitbucket.org/fkie_cd_dare/honeyagent)
* HoneyAgent is a Java agent library that creates a Sandbox for Java applications and applets. Therefore, it uses the JVMTI as well as the JNI to intercept class loading and function calls. During runtime HoneyAgent traces function calls from the analysed application. It is displayed which class calles which function with which parameters. Reflected function calls are translated to the original function names for simpler reading.


[Malware analyis noob to ninja 60min presentation slides](http://www.slideshare.net/grecsl/malware-analysis-101-n00b-to-ninja-in-60-minutes-at-cactuscon-on-april-4-2014)


[Paper on Manual unpacking of UPX packed executable using Ollydbg and Importrec](http://www.iosrjournals.org/iosr-jce/papers/Vol16-issue1/Version-1/L016117177.pdf)

[The Zoo](https://github.com/ytisf/theZoo)
* A repository of LIVE malwares for your own joy and pleasure

[WinMerge](http://winmerge.org/)
* WinMerge is an Open Source differencing and merging tool for Windows. WinMerge can compare both folders and files, presenting differences in a visual text format that is easy to understand and handle.



https://evilzone.org/reverse-engineering/%28pdf%29-robust-static-analysis-of-portable-executable-malware/

http://handlers.sans.org/tliston/ThwartingVMDetection_Liston_Skoudis.pdf

http://0xmalware.blogspot.com/2013/10/cuckoo-sandbox-hardening-virtualbox.html



https://www.virusbtn.com/pdf/conference_slides/2014/Wyke-VB2014.pdf

http://resources.infosecinstitute.com/step-by-step-tutorial-on-reverse-engineering-malware-the-zeroaccessmaxsmiscer-crimeware-rootkit/




Mobile:

[Android Sandbox V1](http://androidsandbox.net/)
* Automated Malware Analysis


[Obfuscation in Android Malware and how to fight back](https://www.virusbtn.com/virusbulletin/archive/2014/07/vb201407-Android-obfuscation)

[Android/Beita.A malware analysis](http://www.jamesejr.com/android-beita-malware-analysis/)




Android obfuscators

[ProGuard](http://proguard.sourceforge.net/)

https://developer.android.com/tools/help/proguard.html
But I a is t

[DexGuard](http://www.saikoa.com/dexguard)



Android De-obfuscators

[De-hoser](https://github.com/strazzere/dehoser)
* Unpacker for the HoseDex2Jar APK Protection which packs the original file inside the dex header

[hidex](https://github.com/cryptax/dextools/tree/master/hidex)
* hides or reveals a given method in a DEX file







Detecting VMs
http://msdn.microsoft.com/en-us/library/aa394102%28v=vs.85%29.aspx
http://msdn.microsoft.com/en-us/library/aa394077%28v=vs.85%29.aspx

[Breaking the Sandbox - Sudeep Singh](http://www.exploit-db.com/wp-content/themes/exploit/docs/34591.pdf)
* Abstract: In this paper, I would like to discuss various existing and interesting techniques which are used to evade the detection of a virus in Sandbox. We will also look at ways a sandbox can be hardened to prevent such evasion.

[On the Cutting Edge: Thwarting Virtual Machine Detection](http://handlers.sans.org/tliston/ThwartingVMDetection_Liston_Skoudis.pdf)


Duping the Machine: malware strategies, post sandbox detection
[Slide deck presentation](https://www.virusbtn.com/pdf/conference_slides/2014/Wyke-VB2014.pdf)



[Paranoid Fish](https://github.com/a0rtega/pafish)
* Pafish is a demo tool that performs some anti(debugger/VM/sandbox) tricks. Most of them are often used by malware to avoid debugging and dynamic analysis. The project is open source, you can read the code of all anti-analysis checks. You can also download the compiled executable (or compile it by yourself) and reverse engineer it, which is quite recommended.





Malware Campaing Writeups
Malware Campaign Writeups

The mask/careto

Stuxnet

Duqu

Flame

Itaduke

[Rotten Tomatoes campaign by Sophos](http://www.sophos.com/en-us/medialibrary/PDFs/technical%20papers/sophos-rotten-tomato-campaign.pdf)


Operation SMN:
Axiom Threat Actor Group Report
http://www.novetta.com/files/9714/1446/8199/Executive_Summary-Final_1.pdf
https://blog.gdatasoftware.com/blog/article/analysis-of-uroburos-using-windbg.html



FinFisher
CodeandSec.com writeup:
[Part 1](https://www.codeandsec.com/FinFisher-Malware-Dropper-Analysis)
[Part 2](https://www.codeandsec.com/FinFisher-Malware-Analysis-Part-2)
[Part 3](https://www.codeandsec.com/FinFisher-Malware-Analysis-Part-3)




Dynamic Analysis
Dynamic Malware Analysis

[Zero Wine](http://zerowine.sourceforge.net/)
* Zero wine is an open source (GPL v2) research project to dynamically analyze the behavior of malware. Zero wine just runs the malware using WINE in a safe virtual sandbox (in an isolated environment) collecting information about the APIs called by the program.






Setting Up Lab
Setting up the Lab

http://www.cybersquared.com/2012/06/malware-analysis-lab-a-fast-and-cost-effective-howto/

[Awesome Guide to building a VM for anonymous Malware Analysis and Reverse Engineering](https://www.codeandsec.com/Building-Ultimate-Anonymous-Malware-Analysis-and-Reverse-Engineering-Machine)






Static Analysis
Static Malware Analysis

Ssdeep - static malware comparison tool

[DRAKVUF](https://tklengyel.github.io/drakvuf/)
* DRAKVUF is an agentless dynamic malware analysis system built on Xen, LibVMI, Volatility and Rekall. It allows for in-depth execution tracing of malware samples and extracting deleted files from memory, all without having to install any special software within the virtual machine used for analysis.

[Code](https://github.com/tklengyel/drakvuf)







Tools

[Pyew](https://code.google.com/p/pyew/)
* Pyew is a (command line) python tool to analyse malware. It does have support for hexadecimal viewing, disassembly (Intel 16, 32 and 64 bits), PE and ELF file formats (it performs code analysis and let you write scripts using an API to perform many types of analysis), follows direct call/jmp instructions in the interactive command line, displays function names and string data references; supports OLE2 format, PDF format and more. It also supports plugins to add more features to the tool.

[Microsoft Message Analyzer](http://www.microsoft.com/en-us/download/details.aspx?id=40308)
* Microsoft Message Analyzer is a new tool for capturing, displaying, and analyzing protocol messaging traffic and other system messages. Message Analyzer also enables you to import, aggregate, and analyze data from log and trace files. It is the successor to Microsoft Network Monitor 3.4 and a key component in the Protocol Engineering Framework (PEF) that was created by Microsoft for the improvement of protocol design, development, documentation, testing, and support. With Message Analyzer, you can choose to capture data live or load archived message collections from multiple data sources simultaneously.

[stupid_malware](https://github.com/andrew-morris/stupid_malware)
* Python malware for pentesters that bypasses most antivirus (signature and heuristics) and IPS using sheer stupidity

[binwally](https://github.com/bmaia/binwally)

[Binary and Directory tree comparison tool using the Fuzzy Hashing concept (ssdeep)](http://w00tsec.blogspot.com/2013/12/binwally-directory-tree-diff-tool-using.html)







Writeups - Tutorials
Writeups/Tutorials

[Malware Analysis Tutorials: a Reverse Engineering Approach](http://fumalwareanalysis.blogspot.com/p/malware-analysis-tutorials-reverse.html)

[Hacking Team Writeup](https://citizenlab.org/2014/06/backdoor-hacking-teams-tradecraft-android-implant/)

[FinFisher Malware Dropper Analysis](https://www.codeandsec.com/FinFisher-Malware-Dropper-Analysis)

[How To Dissect Android Flappy Bird Malware](http://securehoney.net/blog/how-to-dissect-android-flappy-bird-malware.html)

[Analyzing unknown malware blogpost series](http://thegoldenmessenger.blogspot.com/

[Android/Beita.A malware analysis](http://www.jamesejr.com/android-beita-malware-analysis/)

{DIY Android Malware Analysis with OBAD](http://securityintelligence.com/diy-android-malware-analysis-taking-apart-obad-part-1/)

[Uroburos](https://blog.gdatasoftware.com/blog/article/uroburos-highly-complex-espionage-software-with-russian-roots.html)
* https://www.gdata.de/rdk/dl-en-rp-Uroburos

[North Korean Malware Writeup](https://www.codeandsec.com/Supreme-Leaders-Not-That-Supreme-Malwares)

[Case study of the miner botnet](http://pnx.tf/files/2012_cycon-official_miner_plohmann_padilla.pdf)