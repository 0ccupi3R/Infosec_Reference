Interesting Things








CULL


http://www.securitywizardry.com/radar.htm


http://pdos.csail.mit.edu/~xi/papers/stack-sosp13.pdf


https://cseweb.ucsd.edu/~hovav/dist/geometry.pdf
Abstract
We present new techniques that allow a return-into-libc attack to be mounted on
x86 executables that calls no functions at all. Our attack combines a large number of short instruction sequences to build gadgets that allow arbitrary computation. We show how to discover such instruction sequences by means of static analysis. We make use, in an essential way, of the
properties of the x86 instruction set.


[Paypals War on Terror - Chaos Communication Congress 31](http://ccc2.mirror.xt0.org/congress/2014/webm-hd/31c3-6377-en-de-Paypals_War_on_Terror_webm-hd.webm)

[CompSci in the DPRK](http://us2.1und1.c3voc.de/congress/2014/webm-hd/31c3-6253-en-de-Computer_Science_in_the_DPRK_webm-hd.webm)

[Linux Kernel Explanation/Walk through](http://www.faqs.org/docs/Linux-HOWTO/KernelAnalysis-HOWTO.html)

[Underhanded C contest](http://underhanded-c.org/)
[Website detailing various crypto laws around world](http://www.cryptolaw.org/)


[Door Control Systems: An Examination of Lines of Attack](https://www.nccgroup.com/en/blog/2013/09/door-control-systems-an-examination-of-lines-of-attack/)

[They clapped](http://www.econlib.org/library/Columns/y2007/Mungergouging.html)



Regex for credit cards
http://www.regular-expressions.info/creditcard.html
^(?:4[0-9]{12}(?:[0-9]{3})?          # Visa
 |  5[1-5][0-9]{14}                  # MasterCard
 |  3[47][0-9]{13}                   # American Express
 |  3(?:0[0-5]|[68][0-9])[0-9]{11}   # Diners Club
 |  6(?:011|5[0-9]{2})[0-9]{12}      # Discover
 |  (?:2131|1800|35\d{3})\d{11}      # JCB
)$


[List of low-level attacks/persistence techniques.  HIGHLY RECOMMENDED!](http://timeglider.com/timeline/5ca2daa6078caaf4)



Coming War on General Computation

QR Code interesting
http://datagenetics.com/blog/november12013/index.html

http://blog.qartis.com/decoding-small-qr-codes-by-hand/






[Setting up Suricata on a Microtik Router](http://robert.penz.name/849/howto-setup-a-mikrotik-routeros-with-suricata-as-ids/)


[Privilege Escalation Using Keepnote](http://0xthem.blogspot.com/2014/05/late-night-privilege-escalation-keepup.html)


http://www.tau.ac.il/~tromer/acoustic/
Here, we describe a new acoustic cryptanalysis key extraction attack, applicable to GnuPG's current implementation of RSA. The attack can extract full 4096-bit RSA decryption keys from laptop computers (of various models), within an hour, using the sound generated by the computer during the decryption of some chosen ciphertexts. We experimentally demonstrate that such attacks can be carried out, using either a plain mobile phone placed next to the computer, or a more sensitive microphone placed 4 meters away.






http://www.tau.ac.il/~tromer/handsoff/
We demonstrated physical side-channel attacks on a popular software implementation of RSA and ElGamal, running on laptop computers. Our attacks use novel side channels and are based on the observation that the "ground" electric potential in many computers fluctuates in a computation-dependent way. An attacker can measure this signal by touching exposed metal on the computer's chassis with a plain wire, or even with a bare hand. The signal can also be measured at the remote end of Ethernet, VGA or USB cables. 
Through suitable cryptanalysis and signal processing, we have extracted 4096-bit RSA keys and 3072-bit ElGamal keys from laptops, via each of these channels, as well as via power analysis and electromagnetic probing. Despite the GHz-scale clock rate of the laptops and numerous noise sources, the full attacks require a few seconds of measurements using Medium Frequency signals (around 2 MHz), or one hour using Low Frequency signals (up to 40 kHz).

http://infiltratecon.com/downloads/python_deflowered.pdf
VM as injection payload 




Interesting Papers

[The Eavesdropper’s Dillemma](http://www.crypto.com/papers/internet-tap.pdf)

[Mov is turing ocmplete](http://www.cl.cam.ac.uk/~sd601/papers/mov.pdf)

[The Evolution of Protected Processes Part 1: Pass-the-Hash Mitigations in Windows 8.1](http://www.alex-ionescu.com/?p=97)


[Why Qubes doesn’t work on Windows.](http://www.invisiblethingslab.com/resources/2014/A%20crack%20on%20the%20glass.pdf)

[Breaking IPMI/BMC](http://fish2.com/ipmi/how-to-break-stuff.html)



[Reflections on Trusting Trust](https://www.ece.cmu.edu/~ganger/712.fall02/papers/p761-thompson.pdf)

(A Practical Attack to De-Anonymize Social Network Users](https://www.iseclab.org/papers/sonda-TR.pdf)

[Virtual Ghost: Protecting Applications from Hostile Operating Systems](http://sva.cs.illinois.edu/pubs/VirtualGhost-ASPLOS-2014.pdf)

[Ceremony Design and Analysis](http://eprint.iacr.org/2007/399.pdf)
* Abstract: The concept of Ceremony is introduced as an extension of the concept of network protocol, with human nodes alongside computer nodes and with communication links that include UI, human-to-human communication and transfers of physical objects that carry data. What is out-of-band to a protocol is in-band to a ceremony, and therefore subject to design and analysis using variants of the same mature techniques used for the design and analysis of protocols. Ceremonies include all protocols, as well as all applications with a user interface, all workflow and all provisioning scenarios. A secure ceremony is secure against both normal attacks and social engineering. However, some secure protocols imply ceremonies that cannot be made secure. 

[It’s all about the timing. . . Blackhat talk](https://www.blackhat.com/presentations/bh-usa-07/Meer_and_Slaviero/Whitepaper/bh-usa-07-meer_and_slaviero-WP.pdf)
* Description: This paper is broken up into several distinct parts, all
related loosely to timing and its role in information se-
curity today. While timing has long been recognized
as an important component in the crypt-analysts arse-
nal, it has not featured very prominently in the domain
of Application Security Testing. This paper aims at
highlighting some of the areas in which timing can be
used with great effect, where traditional avenues fail. In
this paper, a brief overview of previous timing attacks
is provided, the use of timing as a covert channel is
examined and the effectiveness of careful timing during
traditional web application and SQL injection attacks is
demonstrated. The use of Cross Site Timing in bypass-
ing the Same Origin policy is explored as we believe
the technique has interesting possibilities for turning
innocent browsers into bot-nets aimed at, for instance,
brute-force attacks against third party web-sites

Interesting Software

[ProcDOT](http://www.cert.at/downloads/software/procdot_en.html)
* This tool processes Sysinternals Process Monitor (Procmon) logfiles and PCAP-logs (Windump, Tcpdump) to generate a graph via the GraphViz suite. This graph visualizes any relevant activities (customizable) and can be interactively analyzed.


[Hachoir](https://bitbucket.org/haypo/hachoir/wiki/Home)
* Hachoir is a Python library that allows to view and edit a binary stream field by field

[Distributed File Storage Using JavaScript Botnets](https://github.com/seantmalone/HiveMind)

[Xmount](https://www.pinguin.lu/xmount)
* What is xmount? xmount allows you to convert on-the-fly between multiple input and output harddisk image types. xmount creates a virtual file system using FUSE (Filesystem in Userspace) that contains a virtual representation of the input image. The virtual representation can be in raw DD, DMG, VHD, VirtualBox's virtual disk file format or in VmWare's VMDK file format. Input images can be raw DD, EWF (Expert Witness Compression Format) or AFF (Advanced Forensic Format) files. In addition, xmount also supports virtual write access to the output files that is redirected to a cache file. This makes it possible to boot acquired harddisk images using QEMU, KVM, VirtualBox, VmWare or alike.




Interesting Hardware Projects


[Digital Ding Dong Ditch](https://github.com/samyk/dingdong)
* Digital Ding Dong Ditch is a device to hack into and ring my best friend's wireless doorbell whenever I send a text message to the device. The best part of the device is that it causes my friend, without fail, to come outside, find no one, and go back in. In this project, we'll learn not only how to create this device, but how to reverse engineer radio frequencies we know nothing about using RTL-SDR (a ~$14 software defined radio), as well as creating hardware and software using Arduino, the Adafruit FONA (GSM/SMS/2G board), an RF (radio frequency) transmitter to transmit custom signals, and even how to reverse engineer a proprietary radio signal we know nothing about!


