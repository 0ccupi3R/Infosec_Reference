Finding Opcodes
Methods of finding opcodes:
metasploit opcode DB
memdump
pvefindaddr - mona.py

Pool Blade: A new approach for kernel pool exploitation
https://zdresearch.com/pool-blade-a-new-approach-for-kernel-pool-exploitation/



binwally
https://github.com/bmaia/binwally
Binary and Directory tree comparison tool using the Fuzzy Hashing concept (ssdeep)
http://w00tsec.blogspot.com/2013/12/binwally-directory-tree-diff-tool-using.html



http://www.securiteam.com/tools/5LP0C1PEUY.html
Findjmp2 is a modified version of Findjmp from eEye.com to find jmp, call, push in a loaded DLL. This version includes search for pop/pop/ret set of instructions that is useful to bypass Windows XP SP2 and Windows 2003 stack protection mechanism.

https://cseweb.ucsd.edu/~hovav/dist/geometry.pdf
Abstract
We present new techniques that allow a return-into-libc attack to be mounted on
x86 executables that calls no functions at all. Our attack combines a large number of short instruction sequences to build gadgets that allow arbitrary computation. We show how to discover such instruction sequences by means of static analysis. We make use, in an essential way, of the
properties of the x86 instruction set.

https://github.com/trustedsec/meterssh
MeterSSH is a way to take shellcode, inject it into memory then tunnel whatever port you want to over SSH to mask any type of communications as a normal SSH connection. 






Equip: python bytecode instrumentation
https://github.com/neuroo/equip
equip is a small library that helps with Python bytecode instrumentation. Its API is designed to be small and flexible to enable a wide range of possible instrumentations.
The instrumentation is designed around the injection of bytecode inside the bytecode of the program to be instrumented. However, the developer does not need to know anything about the Python bytecode since the injected code is Python source.
