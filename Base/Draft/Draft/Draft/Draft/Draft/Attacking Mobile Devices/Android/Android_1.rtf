{\rtf1\ansi\ansicpg1252\uc1\deff0
{\fonttbl{\f0\fmodern\fcharset0\fprq2 Courier New;}{\f1\fmodern\fcharset0\fprq1 Courier New,courier;}}
{\colortbl;\red0\green0\blue0;\red255\green255\blue255;\red0\green0\blue255;}
{\*\listtable
{\list\listtemplateid1\listhybrid
{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\'01\loch\af0\hich\af0\dbch\af0\uc1\u9679\'3F;}{\levelnumbers;}\f0\fs24\fi-360\li720\lin720}{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid
{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\'01\loch\af0\hich\af0\dbch\af0\uc1\u9679\'3F;}{\levelnumbers;}\f0\fs24\fi-360\li720\lin720}{\listname ;}\listid2}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}}
\paperw12240\paperh15840\margl1800\margr1800\margt1440\margb1440\fet2\ftnbj\aenddoc
\pgnrestart\pgnstarts0
\pard\plain \ltrch\loch {\f0\fs24\b1\i0\ul\ulc0 Attacking Android Devices}
\par\plain \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b1\i0 Books}
\par\plain {\f0\fs24\b0\i0 Android hackers handbook}
\par\plain \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b1\i0 Security Analysis}
\par\plain \f0\fs24\b1\i0
\par\plain {\f0\fs24\b1\i0 drozer}
\par\plain {\f0\fs24 From: }{\f0\fs24\b0\i0 https://github.com/mwrlabs/drozer}
\par\plain {\f0\fs24 drozer allows you to search for security vulnerabilities in apps and devices by assuming the role of an app and interacting with the Dalvik VM, other apps' IPC endpoints and the underlying OS.}
\par\plain {\f0\fs24 https://github.com/mwrlabs/drozer}
\par\plain {\f0\fs24 Can be downloaded at: }{\f1\fs24 mwr.to/drozer}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b1\i0 App Analysis}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b1\i0 Androguard}
\par\plain {\f0\fs24\b0\i0 From their site:}
\par\plain {\f0\fs24 Androguard is mainly a tool written in python to play with : }
\par\pard\plain \li720\fi-360\sb240\ltrch\loch \ls1\ilvl0{\listtext\f0\fs24 \loch\af0\hich\af0\dbch\af0\uc1\u9679\'3F\tab }{\f0\fs24 Dex/Odex (}{\field{\*\fldinst HYPERLINK "https://sites.google.com/site/io/dalvik-vm-internals"}{\fldrslt\f0\fs24\ul\ulc0\cf3 Dalvik}}{\f0\fs24  virtual machine) (.dex) (disassemble, decompilation), }
\par\pard\plain \li720\fi-360\ltrch\loch \ls1\ilvl0{\listtext\f0\fs24 \loch\af0\hich\af0\dbch\af0\uc1\u9679\'3F\tab }{\f0\fs24 APK (Android }{\field{\*\fldinst HYPERLINK "https://play.google.com/"}{\fldrslt\f0\fs24\ul\ulc0\cf3 application}}{\f0\fs24 ) (.apk), }
\par\plain \ilvl0{\listtext\f0\fs24 \loch\af0\hich\af0\dbch\af0\uc1\u9679\'3F\tab }{\f0\fs24 Android's binary xml (.xml), }
\par\pard\plain \li720\fi-360\sa240\ltrch\loch \ls1\ilvl0{\listtext\f0\fs24 \loch\af0\hich\af0\dbch\af0\uc1\u9679\'3F\tab }{\f0\fs24 Android Resources (.arsc). }
\par\pard\plain \sa240\sb240\ltrch\loch {\f0\fs24 Androguard is available for Linux/OSX/Windows (python powered).}
\par\plain {\f0\fs24 https://code.google.com/p/androguard }
\par\pard\plain \ltrch\loch \f0\fs24\b0\i0
\par\plain {\f0\fs24\b1\i0 Droidmap\tab }
\par\plain {\f0\fs24 From their website:}
\par\plain {\f0\fs24 DroidBox is developed to offer dynamic analysis of Android applications. The following information is shown in the results, generated when analysis is ended: }
\par\pard\plain \li720\fi-360\sb240\ltrch\loch \ls2\ilvl0{\listtext\f0\fs24 \loch\af0\hich\af0\dbch\af0\uc1\u9679\'3F\tab }{\f0\fs24 Hashes for the analyzed package }
\par\pard\plain \li720\fi-360\ltrch\loch \ls2\ilvl0{\listtext\f0\fs24 \loch\af0\hich\af0\dbch\af0\uc1\u9679\'3F\tab }{\f0\fs24 Incoming/outgoing network data }
\par\plain \ilvl0{\listtext\f0\fs24 \loch\af0\hich\af0\dbch\af0\uc1\u9679\'3F\tab }{\f0\fs24 File read and write operations }
\par\plain \ilvl0{\listtext\f0\fs24 \loch\af0\hich\af0\dbch\af0\uc1\u9679\'3F\tab }{\f0\fs24 Started services and loaded classes through DexClassLoader }
\par\plain \ilvl0{\listtext\f0\fs24 \loch\af0\hich\af0\dbch\af0\uc1\u9679\'3F\tab }{\f0\fs24 Information leaks via the network, file and SMS }
\par\plain \ilvl0{\listtext\f0\fs24 \loch\af0\hich\af0\dbch\af0\uc1\u9679\'3F\tab }{\f0\fs24 Circumvented permissions }
\par\plain \ilvl0{\listtext\f0\fs24 \loch\af0\hich\af0\dbch\af0\uc1\u9679\'3F\tab }{\f0\fs24 Cryptography operations performed using Android API }
\par\plain \ilvl0{\listtext\f0\fs24 \loch\af0\hich\af0\dbch\af0\uc1\u9679\'3F\tab }{\f0\fs24 Listing broadcast receivers }
\par\pard\plain \li720\fi-360\sa240\ltrch\loch \ls2\ilvl0{\listtext\f0\fs24 \loch\af0\hich\af0\dbch\af0\uc1\u9679\'3F\tab }{\f0\fs24 Sent SMS and phone calls }
\par\pard\plain \sa240\sb240\ltrch\loch {\f0\fs24 Additionally, two images are generated visualizing the behavior of the package. One showing the temporal order of the operations and the other one being a treemap that can be used to check similarity between analyzed packages. }
\par\pard\plain \ltrch\loch {\f0\fs24\b1\i0 \tab \tab https://code.google.com/p/droidbox/}
\par\plain {\f0\fs24\b0\i0 \tab }
\par\plain \f0\fs24\b0\i0
\par\plain \f0\fs24\b1\i0
\par\plain {\f0\fs24\b1\i0 Papers}
\par\plain \f0\fs24
\par\plain {\f0\fs24 Execute This! Analyzing Unsafe and Malicious Dynamic Code Loading in Android Applications}
\par\plain {\f0\fs24\b0\i0 \tab https://anonymous-proxy servers.net/paper/android-remote-code-execution.pdf}
\par\plain \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24 Analyzing Inter-Application Communication in Android}
\par\plain {\f0\fs24\b0\i0 https://www.eecs.berkeley.edu/~daw/papers/intents-mobisys11.pdf}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24 Automatically Exploiting Potential Component Leaks in Android Applications}
\par\plain {\f0\fs24 http://orbilu.uni.lu/bitstream/10993/16914/1/tr-pcLeaks.pdf}
\par\plain \f0\fs24
\par\plain {\f0\fs24 I know what leaked in your pocket: uncovering privacy leaks on Android Apps with Static Taint Analysis}
\par\plain {\f0\fs24 http://arxiv.org/pdf/1404.7431v1.pdf}
\par\plain \f0\fs24
\par\plain \f0\fs24
\par\plain {\f0\fs24 Bifocals: Analyzing WebView Vulnerabilities in Android Applications}
\par\plain {\f0\fs24 http://www.eecs.berkeley.edu/~emc/papers/Chin-WISA-WebViews.pdf}
\par\plain \f0\fs24
\par\plain {\f0\fs24 Analyzing Android Browser Apps for file:// Vulnerabilities}
\par\plain {\f0\fs24 http://arxiv.org/pdf/1404.4553v3.pdf}
\par\plain \f0\fs24
\par\plain \f0\fs24
\par\plain {\f0\fs24 FlowDroid: Precise Context, Flow, Field, Object-sensitive and Lifecycle-aware Taint Analysis for Android Apps}
\par\plain {\f0\fs24 http://sseblog.ec-spride.de/wp-content/uploads/2013/05/pldi14submissionFlowdroid.pdf}
\par\plain \f0\fs24
\par\plain {\f0\fs24 Detecting privacy leaks in Android Apps}
\par\plain {\f0\fs24 https://publications.uni.lu/bitstream/10993/16916/1/ESSoS-DS2014-Li.pdf}
\par\plain \f0\fs24
\par\plain {\f0\fs24 Apposcopy: Semantics-Based Detection of Android Malware through Static Analysis}
\par\plain {\f0\fs24 http://www.cs.utexas.edu/~yufeng/papers/fse14.pdf}
\par\plain \f0\fs24
\par\plain {\f0\fs24 MAdFraud: Investigating Ad Fraud in Android Applications}
\par\plain {\f0\fs24 http://www.cs.ucdavis.edu/~hchen/paper/mobisys2014.pdf}
\par\plain \f0\fs24
\par\plain {\f0\fs24 Why Eve and Mallory Love Android: An Analysis of Android SSL (In)Security}
\par\pard\plain \fi720\ltrch\loch {\f0\fs24 http://www2.dcsec.uni-hannover.de/files/android/p50-fahl.pdf}
\par\plain \f0\fs24
\par\plain \f0\fs24
\par\pard\plain \ltrch\loch {\f0\fs24 AsDroid: Detecting Stealthy Behaviors in Android Applications by User Interface and Program Behavior Contradiction}
\par\pard\plain \fi720\ltrch\loch {\f0\fs24 https://ece.uwaterloo.ca/~lintan/publications/asdroid-icse14.pdf}
\par\plain \f0\fs24
\par\pard\plain \ltrch\loch {\f0\fs24 NativeGuard: Protecting Android Applications from Third-Party Native Libraries}
\par\pard\plain \fi720\ltrch\loch {\f0\fs24 http://www.cse.lehigh.edu/~gtan/paper/nativeguard.pdf}
\par\plain \f0\fs24
\par\plain {\f0\fs24\b0\i0 Links: }
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 Security enhancements in android through its versions: www.androidtamer.com}
\par\plain \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 OWASP GoatDroid}
\par\plain {\f0\fs24\b0\i0 From: https://www.owasp.org/index.php/Projects/OWASP_GoatDroid_Project}
\par\pard\plain \ltrch\loch {\f0\fs24\b0\i0 \loch\af0\hich\af0\dbch\af0\uc1\u8220\'93OWASP GoatDroid is a fully functional and self-contained training environment for educating developers and testers on Android security. GoatDroid requires minimal dependencies and is ideal for both Android beginners as well as more advanced users. The project currently includes two applications: FourGoats, a location-based social network, and Herd Financial, a mobile banking application. There are also several feature that greatly simplify usage within a training environment or for absolute beginners who want a good introduction to working with the Android platform.\u8221\'94}
\par\plain \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0
\par\pard\plain \li720\fi-360\sb240\ltrch\loch \f0\fs24\b0\i0
\par\pard\plain \ltrch\loch \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0
\par\pard\plain \fi720\ltrch\loch \f0\fs24\b0\i0}