




Client Identification Mechanisms
http://www.chromium.org/Home/chromium-security/client-identification-mechanisms



http://c7zero.info/


Look into
http://cybergibbons.com/uncategorized/an-intriguing-mix-of-micros/


https://github.com/droidsec/droidsec.github.io/wiki/Android-Crackmes


Lookat http://www.cl.cam.ac.uk/~sps32/PartII_030214.pdf



Check under research section
http://www.cl.cam.ac.uk/~sps32/


http://moonbaseotago.com/onerng/theory.html



KillerBee Framework
https://code.google.com/p/killerbee/
KillerBee is a Python based framework and tool set for exploring and exploiting the security of ZigBee and IEEE 802.15.4 networks. Using KillerBee tools and a compatible IEEE 802.15.4 radio interface, you can eavesdrop on ZigBee networks, replay traffic, attack cryptosystems and much more. Using the KillerBee framework, you can build your own tools, implement ZigBee fuzzing, emulate and attack end-devices, routers and coordinators and much more. 



https://cseweb.ucsd.edu/~hovav/dist/geometry.pdf
Abstract
We present new techniques that allow a return-into-libc attack to be mounted on
x86 executables that calls no functions at all. Our attack combines a large number of short instruction sequences to build gadgets that allow arbitrary computation. We show how to discover such instruction sequences by means of static analysis. We make use, in an essential way, of the
properties of the x86 instruction set.


Hardware level trojans http://sharps.org/wp-content/uploads/BECKER-CHES.pdf
Stealthy Dopant-Level Hardware Trojans
In this paper we propose an extremely stealthy approach for implement-
ing hardware Trojans below the gate level, and we evaluate their impact
on the security of the target device. Instead of adding additional cir-
cuitry to the target design, we insert our hardware Trojans by changing
the dopant polarity of existing transistors. Since the modi ed circuit ap-
pears legitimate on all wiring layers (including all metal and polysilicon),
our family of Trojans is resistant to most detection techniques, includ-
ing ne-grain optical inspection and checking against \golden chips".
We demonstrate the e ectiveness of our approach by inserting Trojans
into two designs | a digital post-processing derived from Intel's cryp-
tographically secure RNG design used in the Ivy Bridge processors and
a side-channel resistant SBox implementation | and by exploring their
detectability and their e ects on security.


Access control best pactices
https://srlabs.de/acs/




AV Evasion; One Packer to Rule them all - Empirical identification comparison and circumvention of current AV detection techniques
http://www.arneswinnen.net/wp-content/uploads/2014/08/WP-us-14-Mesbahi-Swinnen-One-packer-to-rule-them-all-Empirical-identification-comparison-and-circumvention-of-current-Antivirus-detection-techniques.pdf


Demystifying the mobile network - Chuck McAuley;
http://2014.video.sector.ca/video/110383258

Go through
https://santoku-linux.com/howtos


Hacking windows through the WIndows API; delves into windows api, how it can break itself
http://www.irongeek.com/i.php?page=videos/derbycon4/t122-getting-windows-to-play-with-itself-a-pen-testers-guide-to-windows-api-abuse-brady-bloxham


Bluetooth IOCTL priv esc mac osx
http://randomthoughts.greyhats.it/2014/10/osx-local-privilege-escalation.html


Breaking apple touchID cheaply
http://www.ccc.de/en/updates/2013/ccc-breaks-apple-touchid


Malware analysis
Unmasking Careto through Memory Analysis - Andrew Case
http://2014.video.sector.ca/video/110388398	


Reversef engineering walk htrouhg; guy rev eng alarm system from shelf to replay
https://www.reddit.com/r/ReverseEngineering/comments/1hb7oy/a_series_about_basics_of_hardware_reverse/
Part 1: http://cybergibbons.com/uncategorized/reverse-engineering-a-wireless-burglar-alarm-system-part-1/
Part 2: http://cybergibbons.com/uncategorized/reverse-engineering-a-wireless-burglar-alarm-part-2/
Part 3: http://cybergibbons.com/uncategorized/reverse-engineering-a-wireless-burglar-alarm-part-3/
Part 4: http://cybergibbons.com/uncategorized/reverse-engineering-a-wireless-burglar-alarm-part-4/
Part 5: http://cybergibbons.com/uncategorized/reverse-engineering-a-wireless-burglar-alarm-part-5/
Part 6: http://cybergibbons.com/uncategorized/reverse-engineering-a-wireless-burglar-alarm-part-6/
Part 7: http://cybergibbons.com/uncategorized/reverse-engineering-a-wireless-burglar-alarm-part-7/
Part 8: http://cybergibbons.com/uncategorized/reverse-engineering-a-wireless-burglar-alarm-part-8/

Hardware reveng tool
https://www.saleae.com/logic

Darknets intro vid - educational
https://www.youtube.com/watch?v=tjJYC2LuJl0

http://winmerge.org/
WinMerge is an Open Source differencing and merging tool for Windows. WinMerge can compare both folders and files, presenting differences in a visual text format that is easy to understand and handle.

http://windowsir.blogspot.com/2013/11/sniper-forensics-memory-analysis-and.html
http://blog.spiderlabs.com/2011/11/sniper-forensics-context-context-context.html
http://blog.spiderlabs.com/2011/03/sniper-forensics-part-4.html
https://digital-forensics.sans.org/summit-archives/2010/2-newell-spiderlabs-sniper-forensics.pdf
http://blog.spiderlabs.com/2011/07/sniper-forensics-part-v-finding-evil-part-ii.html	http://blog.spiderlabs.com/2011/01/sniper-forensics-part-two-target-acquisition-in-part-one-of-the-sniper-forensics-post-we-discussed-the-history-of-forensic.html		

http://www.irongeek.com/i.php?page=videos/defcon-wireless-village-2014/14-hacking-the-wireless-world-with-software-defined-radio-2-0-balint-seeber
Execute ShellCode Using Python 
From the site: http://www.debasish.in/2012/04/execute-shellcode-using-python.html
 In this article I am going to show you, how can we use python and its "ctypes" library to execute a "calc.exe" shell code or any other shell code.


http://www.irongeek.com/i.php?page=videos/defcon-wireless-village-2014/17-phys-macs-and-sdrs-robert-ghilduta




https://digital-forensics.sans.org/summit-archives/2010/2-newell-spiderlabs-sniper-forensics.pdf
Pg10 and onward

http://www.wildcroftsecurity.com/echo-mirage
Echo Mirage is a generic network proxy. It uses DLL injection and function hooking techniques to redirect network related function calls so that data transmitted and received by local applications can be observed and modified. 
Windows encryption and OpenSSL functions are also hooked so that plain text of data being sent and received over an encrypted session is also available. 
Traffic can be intercepted in real-time, or manipulated with regular expressions and a number of action directives


https://code.google.com/p/alpha3/
ALPHA3 is a tool for transforming any x86 machine code into 100% alphanumeric code with similar functionality. It works by encoding the original code into alphanumeric data and combining this data with a decoder, which is a piece of x86 machine code written specifically to be 100% alphanumeric. When run, the decoder converts the data back to the original code, after which it is executed. 



https://www.youtube.com/watch?v=eI4ceLgO_CE
Techniques for fast windows investigations, look at sniper forensics, skip around, 18min has resources you want to grab for snapshots

Compare resources against what power-view can grab
Compare against sysmon service for scaling, setting it as service with scripting


Attacking *multifunction* printers and getting creds fom them;
www.irongeek.com/i.php?page=videos/bsidescleveland2014/plunder-pillage-and-print-the-art-of-leverage-multifunction-printers-during-penetration-testing-deral-heiland


Arachni Web Scanner
http://www.arachni-scanner.com/


Finding Opcodes
Methods of finding opcodes:
metasploit opcode DB

memdump
pvefindaddr - mona.py

http://www.securiteam.com/tools/5LP0C1PEUY.html


http://simplemachines.it/doc/arm_inst.pdf
Arm instrution set


http://eshunrd.blogspot.com/2011/09/linux-kernel-26362-econet-privilege.html

http://theinvisiblethings.blogspot.com/2011/09/anti-evil-maid.html?m=1

https://github.com/rapid7/metasploit-framework/tree/master/modules/payloads/singles/windows

http://theinvisiblethings.blogspot.com/2009/10/evil-maid-goes-after-truecrypt.html


http://www.hping.org/
hping is a command-line oriented TCP/IP packet assembler/analyzer. The interface is inspired to the ping(8) unix command, but hping isn't only able to send ICMP echo requests. It supports TCP, UDP, ICMP and RAW-IP protocols, has a traceroute mode, the ability to send files between a covered channel, and many other features. 







https://github.com/pradeep1288/ffpasscracker
Firefox password cracker



https://github.com/emperorcow/ravenhid
Hardware and software to run a RFID reader to harvest card information. This is the PCB design and Arduino code that will run a RFID reader, allowing you to gather and harvest cards. Typically, a larger reader, such as those in garages, will be more successful, allowing you to ready over a couple feet instead of inches. The board itself is designed to be modular and support multiple methods to output harvested cards once they are read: 
Text file on a MicroSD card
Print out to LCD
Bluetooth Low Energy Arduino serial connection 
Each of these options are supported in code, but can be ignored on the PCB. The PCB itself has been designed to use a pluggable module for each of these options, making it easy to ignore, install, or change out which ones you find useful. 



https://github.com/mubix/netview
Netview is a enumeration tool. It uses (with the -d) the current domain or a specified domain (with the -d domain) to enumerate hosts


http://ciat.sourceforge.net/
The Cryptographic Implementations Analysis Toolkit (CIAT) is compendium of command line and graphical tools whose aim is to help in the detection and analysis of encrypted byte sequences within files (executable and non-executable). 


Shellshock bug writeup by lcamtuf
http://lcamtuf.blogspot.com/2014/10/bash-bug-how-we-finally-cracked.html



https://github.com/Veil-Framework/Veil-PowerView



https://addons.mozilla.org/en-US/firefox/addon/ssleuth/

http://www.appliednsm.com/introducing-flowbat/
Awesome flow tool, SiLK backend



http://cowl.ws/
COWL: A Confinement System for the Web
robust JavaScript confinement system for modern web browsers. COWL introduces label-based mandatory access control to browsing contexts (pages, iframes, etc.) in a way that is fully backward-compatible with legacy web content. 
http://www.scs.stanford.edu/~deian/pubs/stefan:2014:protecting.pdf




Prompt.ml - XSS challenges

Cryptopals.com - Matsano Crypto Challenges

Yelp/Github - OSX Collector - Mass stle forensics/management

https://github.com/ctfs/write-ups

http://www.getmantra.com/hackery/
http://www.getmantra.com/galley/


http://www.petges.lu/home/

http://blog.ioactive.com/2014/09/killing-rootkit.html

https://hashcat.net/events/p13/js-ocohaaaa.pdf

http://www.html5rocks.com/en/tutorials/security/content-security-policy/




Platform for Architecture-Neutral Dynamic Analysis
https://github.com/moyix/panda



Identifying users of browsers:
http://www.chromium.org/Home/chromium-security/client-identification-mechanisms


http://www.amanhardikar.com/mindmaps/Practice.html



http://grehack.org/en/

MSF/Meterpreter cmd reference
http://hacking-class.blogspot.com/2011/08/metasploit-cheat-sheet-metasploit.html

Meterpreter Documentation
https://dev.metasploit.com/documents/meterpreter.pdf

 Xprivacy Android
https://github.com/M66B/XPrivacy#description



Tutorial series on Windows Firewall
http://sourcedaddy.com/windows-7/managing-windows-firewall-using-windows-firewall-advanced-security.html

Intro to content Security Polic
www.html5rocks.com/en/tutorials/security/content-security-policy/



Reading ASM
http://cseweb.ucsd.edu/classes/sp11/cse141/pdf/02/S01_x86_64.key.pdf

Intro to x86 calling conventions
http://codearcana.com/posts/2013/05/21/a-brief-introduction-to-x86-calling-conventions.html


Mem forenics cheat sheet
http://forensicmethods.com/wp-content/uploads/2012/04/Memory-Forensics-Cheat-Sheet-v1.pdf


Firefox private browsing forensics
http://www.magnetforensics.com/forensic-implications-of-a-person-using-firefoxs-private-browsing/

Simple crypto tools
http://rumkin.com/tools/

Unphp.net php decoder
http://www.unphp.net/decode/





Virtual Ghost:
Protecting Applications from Hostile Operating Systems
http://sva.cs.illinois.edu/pubs/VirtualGhost-ASPLOS-2014.pdf

A Practical Attack to De-Anonymize Social Network Users
https://www.iseclab.org/papers/sonda-TR.pdf









malware
http://zerowine.sourceforge.net/

Malware analyis noob to ninja 60min pres slides

http://www.slideshare.net/grecsl/malware-analysis-101-n00b-to-ninja-in-60-minutes-at-cactuscon-on-april-4-2014







Honeypot Sstuff
http://highaltitudehacks.com/2013/06/15/ghost-usb-honeypot-part-2-installing-and-running-the-honeypot/





Developer stuff:

http://project-imas.github.io/


https://viaforensics.com/resources/reports/best-practices-ios-android-secure-mobile-development/











