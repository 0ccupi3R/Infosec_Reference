{\rtf1\ansi\ansicpg1252\uc1\deff0
{\fonttbl{\f0\fmodern\fcharset0\fprq2 Courier New;}{\f1\fmodern\fcharset0\fprq2 Segoe Print;}{\f2\fmodern\fcharset0\fprq1 Courier New,courier;}}
{\colortbl;\red0\green0\blue0;\red255\green255\blue255;\red0\green0\blue255;}
{\*\listtable
{\list\listtemplateid1\listhybrid
{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\'02\'00.;}{\levelnumbers\'01;}\f0\fs24\fi-360\li720\lin720}{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid
{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\'02\'00.;}{\levelnumbers\'01;}\f0\fs24\fi-360\li720\lin720}{\listname ;}\listid2}
{\list\listtemplateid3\listhybrid
{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\'02\'00.;}{\levelnumbers\'01;}\f0\fs24\fi-360\li720\lin720}{\listname ;}\listid3}
{\list\listtemplateid4\listhybrid
{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\'01\loch\af0\hich\af0\dbch\af0\uc1\u9679\'3F;}{\levelnumbers;}\f0\fs24\fi-360\li720\lin720}{\listname ;}\listid4}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}{\listoverride\listid4\listoverridecount0\ls4}}
\paperw12240\paperh15840\margl1800\margr1800\margt1440\margb1440\fet2\ftnbj\aenddoc
\pgnrestart\pgnstarts0
\pard\plain \ltrch\loch \f0\fs24
\par\pard\plain \tx384\tx768\tx1152\tx1536\tx1920\tx2304\tx2688\tx3072\tx3456\tx3840\tx4224\tx4608\tx4992\tx5376\tx5760\tx6144\tx6528\tx6912\tx7296\tx7680\tx8064\tx8448\tx8832\tx9216\tx9600\tx9984\tx10368\tx10752\tx11136\tx11520\tx11904\tx12288\ltrch\loch \f1\fs22
\par\plain {\f1\fs22 Attacking *multifunction* printers and getting creds fom them;\line www.irongeek.com/i.php?page=videos/bsidescleveland2014/plunder-pillage-and-print-the-art-of-leverage-multifunction-printers-during-penetration-testing-deral-heiland}
\par\plain \f1\fs22
\par\plain \f1\fs22
\par\plain {\f1\fs22 https://github.com/SpiderLabs/MCIR}
\par\pard\plain \sa240\sb240\ltrch\loch {\f0\fs24 The Magical Code Injection Rainbow! MCIR is a framework for building configurable vulnerability testbeds. MCIR is also a collection of configurable vulnerability testbeds. }
\par\plain {\f0\fs24 Has testing lessons for xss/csrf/sql}
\par\pard\plain \tx384\tx768\tx1152\tx1536\tx1920\tx2304\tx2688\tx3072\tx3456\tx3840\tx4224\tx4608\tx4992\tx5376\tx5760\tx6144\tx6528\tx6912\tx7296\tx7680\tx8064\tx8448\tx8832\tx9216\tx9600\tx9984\tx10368\tx10752\tx11136\tx11520\tx11904\tx12288\ltrch\loch \f1\fs22
\par\plain {\f1\fs22 https://github.com/Audi-1/sqli-labs}
\par\plain {\f1\fs22 SQLi Lab lessons}
\par\pard\plain \sa240\sb240\ltrch\loch {\f0\fs24 SQLI-LABS is a platform to learn SQLI Following labs are covered for GET and POST scenarios: }
\par\pard\plain \li720\fi-360\sb240\ltrch\loch \ls1\ilvl0{\listtext\f0\fs24 1.\tab }{\f0\fs24 Error Based Injections (Union Select) }
\par\pard\plain \li720\fi-360\ltrch\loch \ls2\ilvl0{\listtext\f0\fs24 1.\tab }{\f0\fs24 String}
\par\plain \ilvl0{\listtext\f0\fs24 2.\tab }{\f0\fs24 Intiger}
\par\pard\plain \li720\fi-360\sa240\sb240\ltrch\loch \ls1\ilvl0{\listtext\f0\fs24 2.\tab }{\f0\fs24 Error Based Injections (Double Injection Based)}
\par\plain \ilvl0{\listtext\f0\fs24 3.\tab }{\f0\fs24 BLIND Injections: 1.Boolian Based 2.Time Based}
\par\pard\plain \li720\fi-360\ltrch\loch \ls1\ilvl0{\listtext\f0\fs24 4.\tab }{\f0\fs24 Update Query Injection.}
\par\plain \ilvl0{\listtext\f0\fs24 5.\tab }{\f0\fs24 Insert Query Injections.}
\par\plain \ilvl0{\listtext\f0\fs24 6.\tab }{\f0\fs24 Header Injections. 1.Referer based. 2.UserAgent based. 3.Cookie based.}
\par\plain \ilvl0{\listtext\f0\fs24 7.\tab }{\f0\fs24 Second Order Injections}
\par\plain \ilvl0{\listtext\f0\fs24 8.\tab }{\f0\fs24 Bypassing WAF }
\par\pard\plain \li720\fi-360\ltrch\loch \ls3\ilvl0{\listtext\f0\fs24 1.\tab }{\f0\fs24 Bypassing Blacklist filters Stripping comments Stripping OR & AND Stripping SPACES and COMMENTS Stripping UNION & SELECT}
\par\plain \ilvl0{\listtext\f0\fs24 2.\tab }{\f0\fs24 Impidence mismatch}
\par\pard\plain \li720\fi-360\ltrch\loch \ls1\ilvl0{\listtext\f0\fs24 9.\tab }{\f0\fs24 Bypass addslashes()}
\par\plain \ilvl0{\listtext\f0\fs24 10.\tab }{\f0\fs24 Bypassing mysql_real_escape_string. (under special conditions)}
\par\plain \ilvl0{\listtext\f0\fs24 11.\tab }{\f0\fs24 Stacked SQL injections.}
\par\pard\plain \li720\fi-360\sa240\ltrch\loch \ls1\ilvl0{\listtext\f0\fs24 12.\tab }{\f0\fs24 Secondary channel extraction}
\par\pard\plain \tx384\tx768\tx1152\tx1536\tx1920\tx2304\tx2688\tx3072\tx3456\tx3840\tx4224\tx4608\tx4992\tx5376\tx5760\tx6144\tx6528\tx6912\tx7296\tx7680\tx8064\tx8448\tx8832\tx9216\tx9600\tx9984\tx10368\tx10752\tx11136\tx11520\tx11904\tx12288\ltrch\loch \f1\fs22
\par\plain {\f1\fs22 Arachni Web Scanner}
\par\plain {\f1\fs22 http://www.arachni-scanner.com/}
\par\plain \f1\fs22
\par\plain \f1\fs22
\par\plain {\f1\fs22 Finding Opcodes}
\par\pard\plain \tx384\tx768\tx1152\tx1536\tx1920\tx2304\tx2688\tx3072\tx3456\tx3840\tx4224\tx4608\tx4992\tx5376\tx5760\tx6144\tx6528\tx6912\tx7296\tx7680\tx8064\tx8448\tx8832\tx9216\tx9600\tx9984\tx10368\tx10752\tx11136\tx11520\tx11904\tx12288\ltrch\loch {\f1\fs22 Methods of finding opcodes:}
\par\plain {\f1\fs22 metasploit opcode DB}
\par\plain \f1\fs22
\par\plain {\f1\fs22 memdump}
\par\plain {\f1\fs22 pvefindaddr - mona.py}
\par\plain \f1\fs22
\par\plain {\f1\fs22 http://www.securiteam.com/tools/5LP0C1PEUY.html}
\par\pard\plain \tx384\tx768\tx1152\tx1536\tx1920\tx2304\tx2688\tx3072\tx3456\tx3840\tx4224\tx4608\tx4992\tx5376\tx5760\tx6144\tx6528\tx6912\tx7296\tx7680\tx8064\tx8448\tx8832\tx9216\tx9600\tx9984\tx10368\tx10752\tx11136\tx11520\tx11904\tx12288\ltrch\loch \f1\fs22
\par\plain \f1\fs22
\par\plain {\f1\fs22 http://simplemachines.it/doc/arm_inst.pdf}
\par\plain {\f1\fs22 Arm instrution set}
\par\plain \f1\fs22
\par\plain \f1\fs22
\par\pard\plain \tx384\tx768\tx1152\tx1536\tx1920\tx2304\tx2688\tx3072\tx3456\tx3840\tx4224\tx4608\tx4992\tx5376\tx5760\tx6144\tx6528\tx6912\tx7296\tx7680\tx8064\tx8448\tx8832\tx9216\tx9600\tx9984\tx10368\tx10752\tx11136\tx11520\tx11904\tx12288\ltrch\loch {\f1\fs22 http://eshunrd.blogspot.com/2011/09/linux-kernel-26362-econet-privilege.html}
\par\plain \f1\fs22
\par\pard\plain \tx384\tx768\tx1152\tx1536\tx1920\tx2304\tx2688\tx3072\tx3456\tx3840\tx4224\tx4608\tx4992\tx5376\tx5760\tx6144\tx6528\tx6912\tx7296\tx7680\tx8064\tx8448\tx8832\tx9216\tx9600\tx9984\tx10368\tx10752\tx11136\tx11520\tx11904\tx12288\ltrch\loch \f1\fs22
\par\plain \f1\fs22
\par\plain {\f1\fs22 https://github.com/rapid7/metasploit-framework/tree/master/modules/payloads/singles/windows}
\par\pard\plain \ltrch\loch \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 http://www.hping.org/}
\par\pard\plain \sa240\sb240\ltrch\loch {\f0\fs24 hping is a command-line oriented TCP/IP packet assembler/analyzer. The interface is inspired to the ping(8) unix command, but hping isn't only able to send ICMP echo requests. It supports TCP, UDP, ICMP and RAW-IP protocols, has a traceroute mode, the ability to send files between a covered channel, and many other features. }
\par\pard\plain \ltrch\loch \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 https://github.com/DiabloHorn/DiabloHorn/tree/master/bypassAV-hashencap}
\par\plain \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0
\par\pard\plain \keep\sb240\ltrch\loch {\f2\fs24 cryptoshot - making and saving encrypted screenshots}
\par\pard\plain \keep\ltrch\loch \f2\fs24
\par\plain {\f2\fs24 ==== GENERAL}
\par\plain {\f2\fs24 This application will make a screenshot of the desktop. If the desktop consists of multiple monitors}
\par\plain {\f2\fs24 it should still work fine. However it has only been tested with a dual monitor setup. }
\par\pard\plain \keep\sa240\ltrch\loch {\f2\fs24 The windows project has the added functionality of sending the screenshot to a server of your choosing.}
\par\pard\plain \ltrch\loch \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 http://linux.byexamples.com/archives/279/record-the-terminal-session-and-replay-later/}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 https://github.com/pradeep1288/ffpasscracker}
\par\plain {\f0\fs24\b0\i0 Firefox password cracker}
\par\plain \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b1\i0 http://rips-scanner.sourceforge.net/}
\par\plain {\f0\fs24 RIPS is a tool written in PHP to find vulnerabilities in PHP applications using static code analysis. By tokenizing and parsing all source code files RIPS is able to transform PHP source code into a program model and to detect sensitive sinks (potentially vulnerable functions) that can be tainted by userinput (influenced by a malicious user) during the program flow. Besides the structured output of found vulnerabilities RIPS also offers an integrated code audit framework for further manual analysis. \line }
\par\pard\plain \fi720\ltrch\loch \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 Add persistence techniques}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 https://github.com/emperorcow/ravenhid}
\par\pard\plain \sa240\sb240\ltrch\loch {\f0\fs24 Hardware and software to run a RFID reader to harvest card information. This is the PCB design and Arduino code that will run a RFID reader, allowing you to gather and harvest cards. Typically, a larger reader, such as those in garages, will be more successful, allowing you to ready over a couple feet instead of inches. The board itself is designed to be modular and support multiple methods to output harvested cards once they are read: }
\par\pard\plain \li720\fi-360\sb240\ltrch\loch \ls4\ilvl0{\listtext\f0\fs24 \loch\af0\hich\af0\dbch\af0\uc1\u9679\'3F\tab }{\f0\fs24 Text file on a MicroSD card}
\par\pard\plain \li720\fi-360\ltrch\loch \ls4\ilvl0{\listtext\f0\fs24 \loch\af0\hich\af0\dbch\af0\uc1\u9679\'3F\tab }{\f0\fs24 Print out to LCD}
\par\pard\plain \li720\fi-360\sa240\ltrch\loch \ls4\ilvl0{\listtext\f0\fs24 \loch\af0\hich\af0\dbch\af0\uc1\u9679\'3F\tab }{\f0\fs24 Bluetooth Low Energy Arduino serial connection }
\par\pard\plain \sa240\sb240\ltrch\loch {\f0\fs24 Each of these options are supported in code, but can be ignored on the PCB. The PCB itself has been designed to use a pluggable module for each of these options, making it easy to ignore, install, or change out which ones you find useful. }
\par\pard\plain \fi720\ltrch\loch \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0
\par\pard\plain \sa240\sb240\ltrch\loch {\f0\fs24 https://github.com/mubix/netview}
\par\plain {\f0\fs24 Netview is a enumeration tool. It uses (with the -d) the current domain or a specified domain (with the -d domain) to enumerate hosts}
\par\pard\plain \fi720\ltrch\loch \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 http://ciat.sourceforge.net/}
\par\pard\plain \ltrch\loch {\f0\fs24 The Cryptographic Implementations Analysis Toolkit (CIAT) is compendium of command line and graphical tools whose aim is to help in the detection and analysis of encrypted byte sequences within files (executable and non-executable). }
\par\pard\plain \fi720\ltrch\loch \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 Shellshock bug writeup by lcamtuf}
\par\plain {\f0\fs24\b0\i0 http://lcamtuf.blogspot.com/2014/10/bash-bug-how-we-finally-cracked.html}
\par\plain \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 https://github.com/Veil-Framework/Veil-PowerView}
\par\plain \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 https://addons.mozilla.org/en-US/firefox/addon/ssleuth/}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 http://www.appliednsm.com/introducing-flowbat/}
\par\plain {\f0\fs24\b0\i0 Awesome flow tool, SiLK backend}
\par\plain \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 http://cowl.ws/}
\par\pard\plain \sa240\sb280\ltrch\loch {\f0\fs28\b1 COWL: A Confinement System for the Web}
\par\pard\plain \ltrch\loch {\f0\fs24 robust JavaScript confinement system for modern web browsers. COWL introduces label-based }{\field{\*\fldinst HYPERLINK "https://en.wikipedia.org/wiki/Mandatory_access_control"}{\fldrslt\f0\fs24\ul\ulc0\cf3 mandatory access control}}{\f0\fs24  to browsing contexts (pages, iframes, etc.) in a way that is fully backward-compatible with legacy web content. }
\par\plain {\f0\fs24 http://www.scs.stanford.edu/~deian/pubs/stefan:2014:protecting.pdf}
\par\pard\plain \fi720\ltrch\loch \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 Prompt.ml - XSS challenges}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 Cryptopals.com - Matsano Crypto Challenges}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 Yelp/Github - OSX Collector - Mass stle forensics/management}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 https://github.com/ctfs/write-ups}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 http://www.getmantra.com/hackery/}
\par\plain {\f0\fs24\b0\i0 http://www.getmantra.com/galley/}
\par\plain \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 http://www.petges.lu/home/}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 http://blog.ioactive.com/2014/09/killing-rootkit.html}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 https://hashcat.net/events/p13/js-ocohaaaa.pdf}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 http://www.html5rocks.com/en/tutorials/security/content-security-policy/}
\par\plain \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 Platform for Architecture-Neutral Dynamic Analysis}
\par\plain {\f0\fs24\b0\i0 https://github.com/moyix/panda}
\par\plain \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 Identifying users of browsers:}
\par\plain {\f0\fs24\b0\i0 http://www.chromium.org/Home/chromium-security/client-identification-mechanisms}
\par\plain \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 http://www.amanhardikar.com/mindmaps/Practice.html}
\par\plain \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 http://grehack.org/en/}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 MSF/Meterpreter cmd reference}
\par\plain {\f0\fs24\b0\i0 http://hacking-class.blogspot.com/2011/08/metasploit-cheat-sheet-metasploit.html}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 Meterpreter Documentation}
\par\plain {\f0\fs24\b0\i0 https://dev.metasploit.com/documents/meterpreter.pdf}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0  Xprivacy Android}
\par\plain {\f0\fs24\b0\i0 https://github.com/M66B/XPrivacy#description}
\par\plain \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 Tutorial series on Windows Firewall}
\par\plain {\f0\fs24\b0\i0 http://sourcedaddy.com/windows-7/managing-windows-firewall-using-windows-firewall-advanced-security.html}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 Intro to content Security Polic}
\par\plain {\f0\fs24\b0\i0 www.html5rocks.com/en/tutorials/security/content-security-policy/}
\par\plain \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 Reading ASM}
\par\plain {\f0\fs24\b0\i0 http://cseweb.ucsd.edu/classes/sp11/cse141/pdf/02/S01_x86_64.key.pdf}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 Intro to x86 calling conventions}
\par\plain {\f0\fs24\b0\i0 http://codearcana.com/posts/2013/05/21/a-brief-introduction-to-x86-calling-conventions.html}
\par\plain \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 Mem forenics cheat sheet}
\par\plain {\f0\fs24\b0\i0 http://forensicmethods.com/wp-content/uploads/2012/04/Memory-Forensics-Cheat-Sheet-v1.pdf}
\par\plain \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 Firefox private browsing forensics}
\par\plain {\f0\fs24\b0\i0 http://www.magnetforensics.com/forensic-implications-of-a-person-using-firefoxs-private-browsing/}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 Simple crypto tools}
\par\plain {\f0\fs24\b0\i0 http://rumkin.com/tools/}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 Unphp.net php decoder}
\par\plain {\f0\fs24\b0\i0 http://www.unphp.net/decode/}
\par\plain \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0
\par\pard\plain \ltrch\loch {\f0\fs24\b0\i0 Virtual Ghost:}
\par\plain {\f0\fs24\b0\i0 Protecting Applications from Hostile Operating Systems}
\par\pard\plain \fi720\ltrch\loch {\f0\fs24\b0\i0 http://sva.cs.illinois.edu/pubs/VirtualGhost-ASPLOS-2014.pdf}
\par\plain \f0\fs24\b0\i0
\par\pard\plain \ltrch\loch {\f0\fs24\b0\i0 A Practical Attack to De-Anonymize Social Network Users}
\par\plain {\f0\fs24\b0\i0 https://www.iseclab.org/papers/sonda-TR.pdf}
\par\pard\plain \fi720\ltrch\loch \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b1\i0 malware}
\par\plain {\f0\fs24\b0\i0 http://zerowine.sourceforge.net/}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 Malware analyis noob to ninja 60min pres slides}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 http://www.slideshare.net/grecsl/malware-analysis-101-n00b-to-ninja-in-60-minutes-at-cactuscon-on-april-4-2014}
\par\plain \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b1\i0 Honeypot Sstuff}
\par\plain {\f0\fs24\b0\i0 http://highaltitudehacks.com/2013/06/15/ghost-usb-honeypot-part-2-installing-and-running-the-honeypot/}
\par\plain \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b1\i0 Developer stuff:}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 http://project-imas.github.io/}
\par\plain \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 https://viaforensics.com/resources/reports/best-practices-ios-android-secure-mobile-development/}
\par\plain \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0}